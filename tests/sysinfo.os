///////////////////////////////////////////////////////////////////////
//
// Тест класса СистемнаяИнформация
// 
//
///////////////////////////////////////////////////////////////////////

Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ПолучитьЗначенияОкружения");
	ВсеТесты.Добавить("ТестДолжен_ПолучитьПеременнуюPATH");
	ВсеТесты.Добавить("ТестДолжен_УстановитьПеременную");
	ВсеТесты.Добавить("ТестДолжен_ПолучитьВерсиюOneScript");
	ВсеТесты.Добавить("ТестДолжен_ПолучитьПользователяОС");
	
	Возврат ВсеТесты;
КонецФункции

Процедура ТестДолжен_ПолучитьЗначенияОкружения() Экспорт
	
	Си = Новый СистемнаяИнформация();
	
	Переменные = Си.ПеременныеСреды();
	
	юТест.ПроверитьЛожь(Переменные.Количество() = 0);
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьПеременнуюPATH() Экспорт
	
	Си = Новый СистемнаяИнформация();
	юТест.ПроверитьЛожь(ПустаяСтрока(Си.ПолучитьПеременнуюСреды("PATH")));
	
КонецПроцедуры

Процедура ТестДолжен_УстановитьПеременную() Экспорт
	
	Си = Новый СистемнаяИнформация();
	СтароеЗначение = Си.ПолучитьПеременнуюСреды("OS");
	НовоеЗначение = "NewTestValue";
	
	Си.УстановитьПеременнуюСреды("OS", НовоеЗначение);
	
	юТест.ПроверитьРавенство(НовоеЗначение, Си.ПолучитьПеременнуюСреды("OS"));
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьВерсиюOneScript() Экспорт
	
	Си = Новый СистемнаяИнформация();
	юТест.ПроверитьЛожь(ПустаяСтрока(Си.Версия));
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьПользователяОС() Экспорт
	Си = Новый СистемнаяИнформация();
	юТест.ПроверитьЛожь(ПустаяСтрока(Си.ПользовательОС));
КонецПроцедуры
